apply plugin: 'java-library'
apply plugin: 'kotlin'

targetCompatibility = build_versions.java
sourceCompatibility = build_versions.java

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$versions.kotlin"
    implementation "org.jsoup:jsoup:$versions.jsoup"
    implementation "org.jetbrains:annotations:$versions.annotations"
    implementation "commons-io:commons-io:$versions.commons_io"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines"
    implementation "io.reactivex.rxjava2:rxjava:$versions.rxjava"
    implementation "io.projectreactor:reactor-core:$versions.reactor"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
    testImplementation "org.mockito:mockito-core:$versions.mockito"

    testImplementation "junit:junit:$versions.junit"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$versions.mockito_kotlin"

    testImplementation("io.mockk:mockk:1.10.0") { exclude module: 'objenesis' }
    // mockk requires objenesis version 2.6.
    testImplementation 'org.objenesis:objenesis:2.6'
    // TODO: Grader won't find this library when it's declared only as testImplementation
    implementation "io.mockk:mockk:1.10.0"
    implementation 'org.objenesis:objenesis:2.6'

    // TODO: Grader won't find this library when it's declared only as testImplementation
    implementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$versions.mockito_kotlin"
}

test {
    testLogging {
        events "failed" //,"passed", "skipped"
        outputs.upToDateWhen { false }
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
